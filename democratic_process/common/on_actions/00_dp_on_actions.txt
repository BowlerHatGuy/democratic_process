# No scope, like on_game_start
on_monthly_pulse = {
	events = {
		dpelection.3001
	}
}

# No scope, like on_game_start
on_yearly_pulse = {
	events = {
		dpelection.3000
	}
}

# Triggers when the game starts
on_game_start = {
	events = {
	}
}

on_game_start_country = {
	events = {
	}
}
# Pop is enslaved
# This = Pop scope
# owner_species = { (species)
# owner = { owner_species = { (empire main species)
# owner = { (empire)
on_pop_enslaved = {
	events = {
	}
}


# Pop is released from slavery
# This = Pop scope
# owner_species = { (species)
# owner = { owner_species = { (empire main species)
# owner = { (empire)
on_pop_emancipated = {
	events = {
	}
}

# Executed as a leader has died
# This = Country
# From = Leader
on_leader_death = {
	events = {
	}
}

# Executed as new ruler has been set
# This = Country
on_ruler_set = {
	events = {
	}
}

# Executed when a ruler has been removed
# From = Previous Ruler
# This = Country
on_ruler_removed = {
	events = {
	}
}

# Executed when the ruler is ousted and goes back to their pre-ruler class
# From = Previous Ruler, already has the new class
# This = Country
on_ruler_back_to_pre_ruler_class = {
	events = {
	}
}

# Executes after a policy has been changed
# use last_changed_policy to identify which policy it was
# This = Country
on_policy_changed = {
	events = {
	}
}

# A ship has been built
# Root = Ship
# From = Planet
on_ship_built = {
	events = {
	}
}

# A war is beginning, executed for every country in the war.
# Root = Country
# From = War
on_war_beginning = {
	events = {
	}
}

# A war has ended
# Root = Loser
# From = Main Winner
on_war_ended = {
	events = {
	}
}

# A country has increased the level of a tech, use last_increased_tech trigger to check tech and level.
# This = Country
on_tech_increased = {
	events = {
	}
}

# We changed a species right
# This = pop
on_pop_rights_change = {
	events = {
	}
}

# Called when an election starts
# scope: country
on_election_started = {
}

# Called when an election ends
# scope: country
on_election_ended = {
}